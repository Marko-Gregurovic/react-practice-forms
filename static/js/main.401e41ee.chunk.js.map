{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","firstName","lastName","age","gender","location","dietaryRestrictions","isVegan","isVegetarian","isKosher","handleChange","bind","handleSumbit","event","aler","this","first","prop","substr","alert","preventDefault","name","target","type","checked","setState","prevState","value","onSubmit","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.401e41ee.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n      super()\n      this.state = {\n          firstName: \"\",\n          lastName: \"\",\n          age: \"\",\n          gender: \"\",\n          location: \"zagreb\",\n          dietaryRestrictions: {\n              isVegan: false,\n              isVegetarian: false,\n              isKosher: false\n          }\n      }\n\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSumbit = this.handleSumbit.bind(this);\n  }\n  \n  handleSumbit(event) {\n      let aler = `First name: ${this.state.firstName}\\n`;\n      aler += `Last name: ${this.state.lastName}\\n`;\n      aler += `Age: ${this.state.age}\\n`;\n      aler += `Gender: ${this.state.gender}\\n`;\n      aler += `Location: ${this.state.location}\\n`;\n      aler += `Dietary restrictions: `;\n      let first = true;\n      for(let prop in this.state.dietaryRestrictions){\n          if(this.state.dietaryRestrictions[prop] === true){\n              first ? first = false : aler += \", \";\n              aler += prop.substr(2);\n          }\n              \n      }\n\n      alert(aler);\n\n      event.preventDefault();\n  }\n\n  handleChange(event) {\n      let name = event.target.name;\n      if(event.target.type === \"checkbox\") {\n          let checked = event.target.checked;\n          this.setState(prevState => {\n              return (\n                  {\n                      dietaryRestrictions: {\n                          ...prevState.dietaryRestrictions,\n                          [name]: checked\n                      }\n                  }\n              );\n              \n          });\n      } else {\n          let value = event.target.value;\n          this.setState({\n              [name]: value\n          });\n      }\n  }\n\n  render() {\n      return (\n          <main>\n              <form onSubmit={this.handleSumbit}>\n                  <input placeholder=\"First Name\" name=\"firstName\" value={this.state.firstName} onChange={this.handleChange} /><br />\n                  <input placeholder=\"Last Name\" name=\"lastName\" value={this.state.lastName} onChange={this.handleChange} /><br />\n                  <input placeholder=\"Age\" name=\"age\" value={this.state.age} onChange={this.handleChange} /><br />\n                  <br />\n                  <label>\n                      <input type=\"radio\" name=\"gender\" checked={this.state.gender === \"male\"} value=\"male\" onChange={this.handleChange} />\n                      Male\n                  </label>\n                  <label>\n                      <input type=\"radio\" name=\"gender\" checked={this.state.gender === \"female\"} value=\"female\" onChange={this.handleChange} />\n                      Female\n                  </label>\n                  <br />\n                  \n                  <label>Please choose a location</label>\n                  <select name=\"location\" value={this.state.location} onChange={this.handleChange}>\n                      <option value=\"zagreb\">Zagreb</option>\n                      <option value=\"berlin\">Berlin</option>\n                      <option value=\"london\">London</option>\n                  </select>\n                  <br />\n                  \n                  <label>\n                      <input type=\"checkbox\" name=\"isKosher\" checked={this.state.dietaryRestrictions.isKosher} value=\"kosher\" onChange={this.handleChange} />\n                      Kosher\n                  </label>\n                  <label>\n                      <input type=\"checkbox\" name=\"isVegetarian\" checked={this.state.dietaryRestrictions.isVegetarian} value=\"vegetarian\" onChange={this.handleChange} />\n                      Vegetarian\n                  </label>\n                  <label>\n                      <input type=\"checkbox\" name=\"isVegan\" checked={this.state.dietaryRestrictions.isVegan} value=\"vegan\" onChange={this.handleChange} />\n                      Vegan\n                  </label>\n                  <br />\n                  \n                  <button>Submit</button>\n              </form>\n              <hr />\n              <h2>Entered information:</h2>\n              <p>Your name: {`${this.state.firstName} ${this.state.lastName}`}</p>\n              <p>Your age: {this.state.age}</p>\n              <p>Your gender: {this.state.gender}</p>\n              <p>Your destination: {this.state.location}</p>\n              <p>\n                  Your dietary restrictions: \n                  <br />\n                  Vegan: {this.state.dietaryRestrictions.isVegan ? \"YES\" : \"NO\"}\n                  <br />\n                  Vegetarian: {this.state.dietaryRestrictions.isVegetarian ? \"YES\" : \"NO\"}\n                  <br />\n                  Kosher: {this.state.dietaryRestrictions.isKosher ? \"YES\" : \"NO\"}\n              </p>\n          </main>\n      )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}